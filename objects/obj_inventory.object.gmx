<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-410</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//creating starting values

totalSlots = 64;
curSlot = 0;
max_per_line = 7;
max_per_column = 5;

for(i = 0; i &lt; totalSlots; i++) global.slot[i] = "noone";
for(i = 0; i &lt; totalSlots; i++) global.coordX[i] = 0;
for(i = 0; i &lt; totalSlots; i++) global.coordY[i] = 0;


spr = nosprite;
slotTaken = -1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

draw_set_font(font_inventory);
draw_set_halign(fa_right);

draw_sprite( sp_bg_inventory, 0, 0, 0);

//DRAW INVENTORY SLOTS
for(j:=0;  j&lt;=max_per_column; j+=1)
{   
    for(i:=0; i&lt;=max_per_line; i+=1)
    {
        draw_sprite(sp_inv_frame, 0, 128+(i*128), 128+(j*128));
    }
}




//FILL INVENTORÂ§Y SLOTS
current_slot = 0;
current_line = 0;
for(i:=0;  i&lt;=(max_per_column*max_per_line); i+=1)
{           
    if (current_slot&gt;=max_per_line)
    {
          current_line += 1; 
          current_slot = 0;   
    }
    if (global.inventory[i,4]&gt;0) then
    {   
        draw_sprite( global.inventory[i,2], 0, 128+current_slot*(128) , 128+(current_line*128));
        if global.inventory[i,4]&gt;1 then
        {
            draw_set_color(c_yellow);
            draw_text(128+(current_slot*128)+50, 128+(current_line*128)+32, global.inventory[i,4]);

        
        }
        else
        {
            draw_set_color(c_black);
            //draw_rectangle(23.3 + i*(100+23.3) , 23.3 , 23.3 + i*(100+23.3) + 100 , 123.3,false);
        } 
        current_slot += 1;  
    }  
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
